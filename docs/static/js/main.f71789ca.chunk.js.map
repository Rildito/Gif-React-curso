{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchtGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"4MA8BeA,EA5BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACI,sBAAMC,SAPW,SAACC,GAClBA,EAAEC,iBACwB,KAAtBJ,EAAWK,SACfP,GAAc,SAAAQ,GAAU,OAAKN,GAAL,mBAAmBM,OAC3CL,EAAc,MAGd,SACI,uBACIM,KAAK,OACLC,MAAOR,EACPS,SAfc,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,a,8BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEII,MAAMF,GAFV,cAEbG,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCyBDO,EA1BC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGf,ECLwB,SAAEA,GAE1B,MAA0Bb,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAGrB,CAACpB,IACGqB,EDXgBK,CAAa1B,GAA7BO,EAAP,EAAOA,KAAMa,EAAb,EAAaA,QAQb,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SAEQT,EAAKE,KAAI,SAAAC,GAAG,OACR,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBiB,IAAKjB,EAAIC,eEWxCiB,EA/BM,WAGjB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAOO,EAAP,KAAmBR,EAAnB,KASA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQQ,EAAWe,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCnBjC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f71789ca.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes  from 'prop-types';\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim() === '') return;\r\n        setCategories(categories => [inputValue,...categories])\r\n        setinputValue('');\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes =  {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\nexport default AddCategory\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=VjEL1h9pd5QrqOlS7YELNt6VOrh4Aao7`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchtGifs'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const {data, loading}= useFetchGifs(category);\r\n    // useEffect(() => {\r\n    //     getGifs(category)\r\n    //         //.then(imgs => setImages(imgs))\r\n    //         .then(setImages);\r\n    // }, [category]);\r\n\r\n   \r\n    return (\r\n        <>\r\n            <h1 className='animate__animated animate__fadeIn'>{category}</h1>\r\n            {loading && <p>Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    data.map(img => (\r\n                        <GifGridItem {...img} key={img.id} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data :imgs,\r\n                    loading:false\r\n                })\r\n            })\r\n    }, [category]);\r\n    return state\r\n};","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    // const handleAdd = (e) => {\r\n    //     e.preventDefault();\r\n    //     // setCategories([...categories, 'Inuyasha']);\r\n    //     // setCategories( categories => \r\n    //     //     [...categories,'Inuyasha']\r\n    //     // );\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}